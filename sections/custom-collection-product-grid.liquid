{{- 'facets.css' | asset_url | stylesheet_tag -}}
{%- liquid
	assign section_heading = section.settings.heading
	assign marker_style = section.settings.marker_style
	
	assign enable_filtering = section.settings.enable_filtering
	assign enable_sorting = section.settings.enable_sorting
	assign show_counts = section.settings.show_counts
	assign filter_color_swatches = section.settings.filter_color_swatches
	assign pagination_type = section.settings.pagination_type
	assign products_per_page = section.settings.products_per_page
	assign columns_desktop = section.settings.columns_desktop
	assign facets_desktop = section.settings.facets_desktop	
	assign photo_gift_collection = section.settings.photo_gift_collection 	
	assign decor_collection = section.settings.decor_collection 	
	
	unless enable_filtering
		assign facets_desktop = 'drawer'
	endunless

-%}


{%- for filter in collection.filters limit: 1 -%}{%- endfor -%}{%- comment -%} This is just to get rid of the "this theme does not support filters" message in the shopify admin {%- endcomment -%}
{%- render 'facets-mobile', results: collection, enable_filtering: enable_filtering, enable_sorting: enable_sorting, show_counts: show_counts, filter_color_swatches: filter_color_swatches -%}
<div class="row main-collection" id="tag-section">
	<div class="small-12 columns">
		{%- if section_heading != blank -%}
			<div class="section-header">
				<div class="section-header--content">
					{%- if section_heading -%}
						<h1 class="section-header--title">
							{% render 'animated-marker-heading', heading: section_heading, style: marker_style %}
						</h1>
					{%- endif -%}
				</div>
			</div>
		{% endif %}
		{%- paginate photo_gift_collection.products by products_per_page -%}
			<div class="collection-container section-spacing-bottom">
				<div id="ProductGridContainer">
					<div class="sidebar-container facets--{{ facets_desktop }} results--{{ collection.products.size }}">
						{%- if facets_desktop == 'sidebar' -%}
							{%- render 'facets-desktop', results: collection, enable_filtering: enable_filtering, enable_sorting: enable_sorting, show_counts: show_counts, filter_color_swatches: filter_color_swatches -%}
						{%- endif -%}

						<tabs-group>
							<div class="sidebar-container--tabbed-filters">
								<div role="tablist" class="tabs__controls">
									<button role="tab" class="tag-filters__item" aria-selected="true">{{ section.settings.photo_gift_heading }}</button>
									<button role="tab" class="tag-filters__item">{{ section.settings.decor_print_heading }}</button>
								</div>								
								
								<div role="tabpanel" class="tabs__panel">
									{%- render 'facets-bar', results: photo_gift_collection, enable_filtering: enable_filtering, enable_sorting: enable_sorting, facets_desktop: facets_desktop, filter_color_swatches: filter_color_swatches -%}

									<ul id="product-grid" data-id="{{ section.id }}" class="products collection row small-up-2 medium-up-{{ columns_desktop }} pagination--{{ pagination_type }}{% if collection.products.size == 0 %} collection--empty{%- endif -%}">
										{%- for product in photo_gift_collection.products -%}
											<li class="column">
												{%- render 'product-card', product_card_product: product -%}
											</li>
										{%- endfor -%}
									</ul>
								</div>
								<div role="tabpanel" class="tabs__panel" hidden>									
									{%- render 'facets-bar', results: decor_collection, enable_filtering: enable_filtering, enable_sorting: enable_sorting, facets_desktop: facets_desktop, filter_color_swatches: filter_color_swatches -%}
									
									<ul id="product-grid" data-id="{{ section.id }}" class="products collection row small-up-2 medium-up-{{ columns_desktop }} pagination--{{ pagination_type }}{% if collection.products.size == 0 %} collection--empty{%- endif -%}">
										{%- for product in decor_collection.products -%}
											{% if product.vendor == collection.title %}
												<li class="column">
													{%- render 'product-card', product_card_product: product -%}
												</li>
											{% endif %}
										{%- endfor -%}
									</ul>
								</div>
								
							</div>
							{% render 'pagination', paginate: paginate, pagination_type: pagination_type, id: section.id %}
						</tabs-group>									

					</div>
				</div>
			</div>
		{%- endpaginate -%}
	</div>
</div>

{%- if enable_filtering -%}
{{ 'nouislider.js' | asset_url | script_tag }}
<script src="{{ 'facets.js' | asset_url }}" defer="defer"></script>
{%- endif -%}
{{- 'custom-collection-page.css' | asset_url | stylesheet_tag -}}

<script>

	class TabsGroup extends HTMLElement {
		constructor() {
			super();
			this.tabs = this.querySelectorAll('[role="tab"]');
			this.panels = this.querySelectorAll('[role="tabpanel"]');
		}

		get selected() {
			return this.querySelector('[role="tab"][aria-selected="true"]');
		}

		set selected(element) {
			this.selected?.setAttribute('aria-selected', 'false');
			element?.setAttribute('aria-selected', 'true');
			element?.focus();
			this.updateSelected();
		}

		connectedCallback() {
			this.setIds();
			this.updateSelected();
			this.initEvents();
		}

		setIds() {
			this.tabs.forEach((tab, index) => {
				const panel = this.panels[index];

				tab.id ||= `tab-${index}`;
				panel.id ||= `panel-${index}`;

				tab.setAttribute('aria-controls', panel.id);
				panel.setAttribute('aria-labelledby', tab.id);
			});
		}

		updateSelected() {
			this.tabs.forEach((tab, index) => {
				const panel = this.panels[index];
				const isSelected = tab.getAttribute('aria-selected') === 'true';

				tab.setAttribute('aria-selected', isSelected ? 'true' : 'false');
				tab.setAttribute('tabindex', isSelected ? '0' : '-1');
				panel.setAttribute('tabindex', isSelected ? '0' : '-1');
				panel.hidden = !isSelected;
			});
		}

		initEvents() {
			this.tabs.forEach((tab) => {
				tab.addEventListener('click', () => this.selected = tab);

				tab.addEventListener('keydown', (event) => {
				if (event.key === 'ArrowLeft') {
					this.selected = tab.previousElementSibling ?? this.tabs.at(-1);
				} else if (event.key === 'ArrowRight') {
					this.selected = tab.nextElementSibling ?? this.tabs.at(0);
				}
				});
			});
		}
	}

	customElements.define('tabs-group', TabsGroup);

    var tag_filters = document.getElementById('tag-filters');
    tag_filters.onclick = function(){
        var targetSection = document.getElementById('tag-section');
            window.scrollTo(0, targetSection.offsetTop - 20);
    };
</script>


{% schema %}
{
    "name": "Custom Product grid",
    "settings": [
		{
			"type": "header",
			"content": "Heading"
		},
		{
			"type": "text",
			"id": "heading",
			"label": "Heading",
			"default": "Shop by Category",
			"info": "Wrap your text between | to add animated markers. For example: Animated |marker| will underline marker text."
		},
		{
			"type": "select",
			"id": "marker_style",
			"options": [
				{
					"value": "style1",
					"label": "Basic"
				},
				{
					"value": "style2",
					"label": "Double"
				},
				{
					"value": "style3",
					"label": "Squiggle"
				},
				{
					"value": "style4",
					"label": "Zigzag"
				}
			],
			"default": "style1",
			"label": "Marker"
		},
		{
			"type": "header",
			"content": "Product grid"
		},
		{
			"type": "range",
			"id": "products_per_page",
			"min": 2,
			"max": 48,
			"step": 1,
			"label": "Number of products",
			"default": 12
		},
		{
			"type": "range",
			"id": "columns_desktop",
			"min": 2,
			"max": 5,
			"step": 1,
			"label": "Number of columns on desktop",
			"default": 3
		},
		{
	      	"type": "select",
	      	"id": "pagination_type",
	      	"options": [
				{
					"value": "paginated",
					"label": "Paginated"
				},
				{
					"value": "loadmore",
					"label": "Click to load"
				},
				{
					"value": "infinite",
					"label": "Infinite"
				}
	      	],
	      	"default": "paginated",
	      	"label": "Pagination",
	      	"info": "Choose how additional pages of products are navigated."
	    },
		{
			"type": "header",
			"content": "photo gift collections"
		},
		{
			"type": "text",
			"id": "photo_gift_heading",
			"label": "Tab Heading"
		},
		{
	      	"type": "collection",
	      	"id": "photo_gift_collection",
	      	"label": "Select Collection"
	    },
		{
			"type": "header",
			"content": "Decor Print collections"
		},
		{
			"type": "text",
			"id": "decor_print_heading",
			"label": "Tab Heading"
		},
		{
	      	"type": "collection",
	      	"id": "decor_collection",
	      	"label": "Select Collection"
	    },
	    {
	      	"type": "header",
	      	"content": "Filtering and sorting"
	    },
	    {
	      	"type": "checkbox",
	      	"id": "enable_filtering",
	      	"default": true,
	      	"label": "Enable filtering",
	      	"info": "Customize [filters](/admin/menus)"
	    },
	    {
	      	"type": "checkbox",
	      	"id": "enable_sorting",
	      	"default": true,
	      	"label": "Enable sorting"
	    },
		{
	    	"type": "checkbox",
	      	"id": "show_counts",
	      	"default": true,
	      	"label": "Show filter values count"
	    },
		{
			"type": "checkbox",
			"id": "filter_color_swatches",
			"default": true,
			"label": "Show color swatches"
		},
		{
	      	"type": "select",
	      	"id": "facets_desktop",
	      	"options": [
				{
					"value": "sidebar",
					"label": "Sidebar"
				},
				{
					"value": "drawer",
					"label": "Drawer"
				}
			],
			"default": "sidebar",
			"label": "Desktop position",
			"info": "Position of filters on desktop"
	    }
    ]	
}
{% endschema %}
