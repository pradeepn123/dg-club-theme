{{ 'login-register.css' | asset_url | stylesheet_tag }}
<div class="row">
	<div class="small-12 columns">
    <div class="thb-form-container">
      <div class="thb-register-form">
        <h4>{{ 'customer.login_page.create_account' | t }}</h4>
        <div class="register_button_container">
          <button id="register_customer" class="tab active" data-form-tab="customer_form"> Customer </button>
          <button id="register_creator" class="tab" data-form-tab="creator_form"> Creator/Reseller </button>
        </div>
        <p>{{ 'customer.login_page.create_account_description' | t }}</p>
        {% form 'create_customer', novalidate: 'novalidate', class: 'customer_form showForm' %}
          <span id="form-custom-errors"></span>
					{% if form.errors %}
					<div class="form-notification error">
						{% render 'svg-icons' with 'thb-error' %} {{ form.errors | default_errors }}
					</div>
					{% endif %}
					<div class="fields">
            <div class="field">
              <input type="text" id="RegisterForm-FirstName" name="customer[first_name]" class="full" value="{% if form.first_name %}{{ form.first_name }}{% endif %}" placeholder="{{ 'customer.login_page.first_name' | t }}" required/>
	            <label for="first_name">{{ 'customer.login_page.first_name' | t }}*</label>
            </div>

            <div class="field">
              <input type="text" id="RegisterForm-LastName" name="customer[last_name]" class="full" value="{% if form.last_name %}{{ form.last_name }}{% endif %}" placeholder="{{ 'customer.login_page.last_name' | t }}" required/>
	            <label for="last_name">{{ 'customer.login_page.last_name' | t }}*</label>
            </div>
					</div>

          <div class="field">
            <input type="email" name="customer[email]" class="full {% if form.errors contains 'email' %}invalid{% endif %}" value="" placeholder="{{ 'customer.login_page.email' | t }}" />
            <label for="email">{{ 'customer.login_page.email' | t }}</label>
          </div>

          <div class="field">
            <input type="password" name="customer[password]" class="full" value="" placeholder="{{ 'customer.login_page.password' | t }}" />
            <label for="password">{{ 'customer.login_page.password' | t }}</label>
          </div>
          <button type="submit" class="button full"><span>{{ 'customer.login_page.submit_register' | t }}</span></button>
        {% endform %}


        <creator-form>
          <form class="creator_form" id="creator_form">
            
            <div class="fields">
              <div class="field">
                <input type="text" name="first_name" id="creator_firstname" class="full" value="{% if form.first_name %}{{ form.first_name }}{% endif %}" placeholder="{{ 'customer.login_page.first_name' | t }}" required 
                  onchange="checkFields()"/>
                <label for="first_name">{{ 'customer.login_page.first_name' | t }}*</label>
              </div>
              <div class="field">
                <input type="text" name="last_name" id="creator_lastname" class="full" value="{% if form.last_name %}{{ form.last_name }}{% endif %}" placeholder="{{ 'customer.login_page.last_name' | t }}" required
                  onchange="checkFields()"/>
                <label for="last_name">{{ 'customer.login_page.last_name' | t }}*</label>
              </div>
            </div>
            
            <div class="field">
              <input type="email" name="email" id="creator_email" class="full {% if form.errors contains 'email' %}invalid{% endif %}" value="" placeholder="{{ 'customer.login_page.email' | t }}"
              onchange="checkFields()" />
              <label for="email">{{ 'customer.login_page.email' | t }}</label>
            </div>
            <span class="email_id_error"></span>
            <span class="email-error-msg"></span>
            
            <div class="social__link__container" id="social__link__container">
              <div class="field field__class" id="social_media_main" class="social_media_main">
                <input type="text" name="social_media_1" class="full more_social_field" id="getInputData" value="" placeholder="Social media link" />
                <label for="social_media_1">Social media link</label>
              </div>
              {% comment %} <div id="social_media_main_fixed"></div> {% endcomment %}
            </div>
            <a href="javascript:void(0)" class="more_social_links" id="more_social_links">+ Add more links</a>

            <span class="field_label">Share your works for us to review and approve your account* </span>
            <div class="field">
              <input type="url" name="portfolio_url" id="creator_portfolio_url" class="full {% if form.errors contains 'portfolio_url' %}invalid{% endif %}" value="{% if form.first_name %}{{ form.first_name }}{% endif %}" placeholder="{{ 'customer.login_page.first_name' | t }}"
              onchange="checkFields()" />
              <label for="portfolio_url">Portfolio link</label>
            </div>
            <span class="portfolio-error-msg"></span>
            
            <div class="file-to-upload">
                <label for="file-input">
                  <span>Add files</span>
                  <span>Accepts .jpg, .png & .pdf</span>
                </label>                
                <input id="file-input" type="file" multiple />
            </div>
            <div class="uploaded_files">              
              <ul></ul>
            </div>
            <span class="field_label">By submitting this form, you confirm that you accept the <a href="#">Terms of Service.</a></span>

            <button type="submit" class="button full creator_form_button" disabled><span>Send request</span></button>

          </form>
        </creator-form>

				<div class="switch-login-section">
					{{ 'customer.login_page.already_have_an_account' | t }} 
					{% assign text_button_title = 'customer.login_page.login' | t %}
					{% render 'text-button', url: routes.account_login_url, title: text_button_title %}
				</div>
      </div>
    </div>
  </div>
</div>


<script>
  var appendButton = document.querySelector('.more_social_links');
  appendButton.addEventListener('click', function() {
    console.log('ji')
  });

  const matcher = /^(?:\w+:)?\/\/([^\s\.]+\.\S{2}|localhost[\:?\d]*)\S*$/;
  function isUrl(string){
    return matcher.test(string);
  }

  const emailMatcher = /^[a-z0-9]+@[a-z]+\.[a-z]{2,3}$/; 
  function isEmail(string){
    return emailMatcher.test(string);
  }

  function checkFields() {
    const creatorFirstName = document.querySelector('#creator_firstname');
    const creatorLastName = document.querySelector('#creator_lastname');
    const creatorPortfolioUrl = document.querySelector('#creator_portfolio_url');
    const creatorEmail = document.querySelector('#creator_email');
    const creatorSubmitBtn = document.querySelector('#creator_form button:last-child')

    if(creatorFirstName.value && creatorLastName.value && creatorEmail.value && creatorPortfolioUrl.value) {
      creatorSubmitBtn.removeAttribute('disabled');
    } else {
      creatorSubmitBtn.disabled = true;
    }
  }

  if (window.location.pathname === '/account/register') {
    setTimeout(()=>{
      const firstName = document.querySelector('#RegisterForm-FirstName')
      const lastName = document.querySelector('#RegisterForm-LastName')
      const submitBtn = document.querySelector('#create_customer button:last-child')
      const registerForm = document.querySelector('#create_customer')

      const format = /[0-9 `!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?~]/;
      const customError = document.querySelector('#form-custom-errors');

  
      if (registerForm && firstName && lastName && submitBtn) {
        submitBtn.onclick = function (e) {
            e.preventDefault();
            if (!firstName.value || !lastName.value || format.test(firstName.value) || format.test(lastName.value)) {
              customError.textContent = "First Name or Last Name can't be blank.";
              customError.style.color = "red";
              customError.style.fontSize = "13px";
            } else {
              registerForm.submit();
            }
        }
      }

     
    }, 2000)

    const creatorRegisterForm = document.querySelector('#creator_form');
    const creatorPortfolioUrl = document.querySelector('#creator_portfolio_url');
    const creatorEmail = document.querySelector('#creator_email');
    const emailError = document.querySelector('.email-error-msg');
    const creatorSubmitBtn = document.querySelector('#creator_form button:last-child')
    const portfolioError = document.querySelector('.portfolio-error-msg');

    if(creatorRegisterForm && creatorEmail && creatorPortfolioUrl && creatorSubmitBtn) {
      creatorRegisterForm.onsubmit = function (e) {
        e.preventDefault();
        if (!isEmail(creatorEmail.value)) {
          emailError.textContent = "Email field must be of type email";
          emailError.style.color = "red";
          emailError.style.fontSize = "13px";
        }
        if(!isUrl(creatorPortfolioUrl.value)) {
            portfolioError.textContent = "Portfolio field must be a url.";
            portfolioError.style.color = "red";
            portfolioError.style.fontSize = "13px";
        }
      }
    }
  }
</script>