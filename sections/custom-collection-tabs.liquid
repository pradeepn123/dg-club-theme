
{{- 'custom-collection-tabs.css' | asset_url | stylesheet_tag -}}

{%- liquid
	assign section_heading = section.settings.heading
	assign marker_style = section.settings.marker_style
	assign heading_size = section.settings.heading_size
	assign columns_desktop = section.settings.columns_desktop
	
	assign style = section.settings.style
	assign heading_position = section.settings.heading_position

	assign marker_color = section.settings.marker_color
	assign text_color = section.settings.text_color
	assign overlay_color = section.settings.overlay_color
	assign overlay_opacity = section.settings.overlay_opacity

	assign disable_top_spacing = section.settings.disable_top_spacing
	assign disable_bottom_spacing = section.settings.disable_bottom_spacing

	assign columns_class = 'medium-6 large-4'
	case columns_desktop
		when 2
			assign columns_class = 'medium-6'
		when 3
			assign columns_class = 'medium-4'
		when 4
			assign columns_class = 'medium-6 large-3'
		when 5
			assign columns_class = 'medium-3 large-1/5'
		when 6
			assign columns_class = 'medium-3 large-2'
	endcase
-%}
<div class="collection-tabs">
	<div class="row">
		<div class="small-12 columns">
			<div class="list-collections_custom section-spacing{% if disable_top_spacing %} section-spacing--disable-top{% endif %}{% if disable_bottom_spacing %} section-spacing--disable-bottom{% endif %}" style="--overlay-color-rgb: {{ overlay_color.rgb | replace: ' ' , ',' }}; --overlay-opacity: {{ overlay_opacity | divided_by: 100.0 }}; --var-collection-list-columns:{{ columns_desktop }}; --collection-text-color: {{ text_color }}">
				<div class="section-header">
					<div class="section-header--content">
						{%- if section_heading -%}
							<h3 class="section-header--title">
								{% render 'animated-marker-heading', heading: section_heading, style: marker_style, color: marker_color %}
							</h3>
						{%- endif -%}
					</div>				
					<scroll-shadow>
						<collection-tabs class="collection-tabs__list" data-target="product-grid-{{ section.id }}">
							{%- for block in section.blocks -%}
								{%- if block.settings.title != blank -%}
									<button type="button" data-collection="{{ block.settings.handle }}" class="collection-tabs__list-link{% if forloop.first == true %} active{% endif %}" {{ block.shopify_attributes }}>{{ block.settings.title }}</button>								
								{%- endif -%}
							{%- endfor -%}
						</collection-tabs>
					</scroll-shadow>
				</div>
			
				<slide-show
					id="product-grid-{{ section.id }}"
					data-id="{{ section.id }}"
					class="products carousel row small-up-2 medium-up-{{ columns_desktop }}"
				>
					{%- for block in section.blocks -%}
						{%- assign mainloop = forloop -%}
						{%- assign collection_list = block.settings.collection_list -%}
						{%- for collection in collection_list -%}
							<div
								class="{{ columns_class }} columns{% if mainloop.first == true %} carousel__slide{% endif %}"
								data-collection="{{ block.settings.handle }}"
							>
								{%- render 'collection-card-tab', grid_collection: collection, media_aspect_ratio: section.settings.image_ratio, style: style, index: forloop.index, heading_position: heading_position, heading_size: heading_size -%}
							</div>
						{%- endfor -%}
						
						{%- if collection_list.count > columns_desktop -%}
							<div class="flickity-nav flickity-prev" tabindex="0">{% render 'svg-icons' with 'carousel-prev' %}</div>
							<div class="flickity-nav flickity-next" tabindex="0">{% render 'svg-icons' with 'carousel-next' %}</div>
						{%- endif -%}
					
					{%- endfor -%}
				</slide-show>

				{% comment %} {%- if show_progress_bar -%}
				<div class="flickity-progress">
					<div class="flickity-progress--bar"></div>
				</div>
				{%- endif -%} {% endcomment %}
			</div>
		</div>
	</div>
</div>
<script src="{{ 'collection-tabs.js' | asset_url }}" defer="defer"></script>

{% schema %}
  {
    "name": "Custom collection tabs",
	"class": "section-collection-tabs",
    "settings": [
		{
			"type": "text",
			"id": "heading",
			"label": "Heading",
			"default": "Shop by Category",
			"info": "Wrap your text between | to add animated markers. For example: Animated |marker| will underline marker text."
		},
		{
			"type": "select",
			"id": "marker_style",
			"options": [
				{
					"value": "style1",
					"label": "Basic"
				},
				{
					"value": "style2",
					"label": "Double"
				},
				{
					"value": "style3",
					"label": "Squiggle"
				},
				{
					"value": "style4",
					"label": "Zigzag"
				}
			],
			"default": "style1",
			"label": "Marker"
		},
		{
			"type": "select",
			"id": "heading_size",
			"options": [
				{
					"value": "small",
					"label": "Small"
				},
				{
					"value": "medium",
					"label": "Medium"
				},
				{
					"value": "large",
					"label": "Large"
				}
			],
			"default": "small",
			"label": "Collection heading size"
		},
		{
	      	"type": "select",
	      	"id": "image_ratio",
	      	"options": [
	        	{
					"value": "adapt",
					"label": "Adapt to image"
				},
	        	{
	          		"value": "portrait",
	          		"label": "Portrait"
	        	},
	        	{
					"value": "square",
					"label": "Square"
	        	}
	      	],
	      	"default": "portrait",
	      	"label": "Image ratio",
	      	"info": "Add images by editing your collections. [Learn more](https://help.shopify.com/en/manual/products/collections)"
	    },		
		{
			"type": "select",
			"id": "style",
			"options": [
				{
					"value": "style1",
					"label": "Underneath image"
				},
				{
					"value": "style2",
					"label": "Over image"
				}
			],
			"default": "style1",
			"label": "Style"
		},
		{
			"type": "range",
			"id": "columns_desktop",
			"min": 2,
			"max": 6,
			"step": 1,
			"default": 4,
	      	"label": "Number of columns on desktop"
	    },		
		{
        	"type": "header",
        	"content": "Carousel"
      	},		
		{
        	"type": "header",
        	"content": "Grid"
      	},		
		{
        	"type": "header",
        	"content": "Over image"
      	},
		{
			"type": "select",
			"id": "heading_position",
			"label": "Heading position",
			"options": [
				{ "value": "top-left", "label": "Top left" },
				{ "value": "top-center", "label": "Top center" },
				{ "value": "top-right", "label": "Top right" },
				{ "value": "middle-left", "label": "Middle left" },
				{ "value": "middle-center", "label": "Middle center" },
				{ "value": "middle-right", "label": "Middle right" },
				{ "value": "bottom-left", "label": "Bottom left" },
				{ "value": "bottom-center", "label": "Bottom center" },
				{ "value": "bottom-right", "label": "Bottom right" }
			],
			"default": "bottom-center"
		},
		{
        	"type": "header",
        	"content": "Colors"
      	},
		{
			"type": "color",
			"id": "marker_color",
			"label": "Marker",
			"default": "#FD6262"
		},
		{
			"type": "color",
			"id": "text_color",
			"label": "Text",
			"default": "#2C2D2E"
		},
		{
			"type": "color",
			"id": "overlay_color",
			"label": "Overlay",
			"default": "transparent"
		},
		{
			"type": "range",
			"id": "overlay_opacity",
			"min": 0,
			"max": 100,
			"step": 1,
			"unit": "%",
			"label": "Overlay opacity",
			"default": 30
		},
		{
        	"type": "header",
        	"content": "Spacing"
      	},
		{
			"type": "checkbox",
			"id": "disable_top_spacing",
			"default": false,
			"label": "Remove top spacing"
		},
		{
			"type": "checkbox",
			"id": "disable_bottom_spacing",
			"default": false,
			"label": "Remove bottom spacing"
		}
    ],
    "blocks": [
        {
            "type": "collection",
            "name": "Collection",
            "settings": [
                {
                    "type": "collection_list",
                    "id": "collection_list",
                    "label": "Collections List",
                    "limit": 18
                },
                {
                    "type": "text",
                    "id": "title",
                    "label": "Heading"
                },
                {
                    "type": "text",
                    "id": "handle",
                    "label": "collection handle"
                }
            ]
        }
    ],
    "presets": [
      	{
        	"name": "Custom collection tabs",
            "blocks": [
                {
                  "type": "collection"
                },
                {
                    "type": "collection"
                }
            ]
      	}
    ]
  }
{% endschema %}
